---
groups:
- name: pipeline
  jobs: [rc, bosh-rc, testflight, shipit, minor, major, patch]

jobs:
- name: rc
  public: true
  serial_groups: [version]
  plan:
  - aggregate:
    - {get: boshrelease}
    - {get: boshrelease-trigger, trigger: true, params: {skip_download: true}}
    - {get: version, params: {pre: rc}}
  - put: version
    params: {file: version/number}

- name: bosh-rc
  public: true
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: boshrelease, passed: [rc], trigger: true}
    - {get: version, passed: [rc], trigger: true}
  - task: create-candidate-release
    file: boshrelease-ci/ci/tasks/create-candidate-release.yml
  - put: candidate-release
    params: {file: candidate-release/stannis-*.tgz}

- name: testflight
  public: true
  serial_groups: [bosh-lite-testflight]
  plan:
  - aggregate:
    - {get: boshrelease, passed: [bosh-rc], trigger: true}
    - {get: version, passed: [bosh-rc], trigger: true}
    - {get: candidate-release, passed: [bosh-rc], trigger: true}
  - task: create-lite-manifest
    file: boshrelease-ci/ci/tasks/create-manifest.yml
    params:
      deployment_name: stannis-testflight
      bosh_target: {{bosh-lite-testflight-target}}
      bosh_username: {{bosh-lite-username}}
      bosh_password: {{bosh-lite-password}}
      webserver_api: {{webserver-api}}
      webserver_username: {{webserver-username}}
      webserver_password: {{webserver-password}}
  - put: lite-deployment-testflight
    params:
      manifest: manifest/manifest.yml
      releases: [candidate-release/*.tgz]


- name: shipit
  serial_groups: [version]
  public: true
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: boshrelease, passed: [testflight]}
    - {get: candidate-release, passed: [testflight]}
    - {get: version, passed: [testflight], params: {bump: final}}
  - task: finalize-release
    file: boshrelease-ci/ci/tasks/finalize-release.yml
    params:
      aws_access_key_id: {{cfcommunity-aws-access}}
      aws_secret_access_key: {{cfcommunity-aws-secret}}
  - put: boshrelease
    params:
      repository: final-release-repo
      rebase: true
  - task: create-release-notes
    file: boshrelease-ci/ci/tasks/create-release-notes.yml
  - put: version
    params: {file: version/number}
  - task: generate-commitish
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: dingotiles/dingo-postgresql-release-pipeline}
      inputs: [{name: boshrelease}]
      outputs: [{name: generated-commitish}]
      run:
        path: sh
        args:
        - -c
        - |
          git -C boshrelease rev-parse HEAD > generated-commitish/commitish
  - task: rename-dependency-releases
    file: boshrelease-ci/ci/tasks/rename-dependency-releases.yml
  - put: github-release
    params:
      name: release-notes/release-name
      tag: release-notes/release-name
      body: release-notes/notes.md
      commitish: generated-commitish/commitish
      globs: [final-release-tarball/*.tgz]

- name: major
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/number}

- name: minor
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/number}

- name: patch
  public: true
  serial_groups: [version]
  plan:
  - get: version
    passed: [shipit]
    trigger: true
    params: {bump: patch, pre: rc}
  - put: version
    params: {file: version/number}

resources:
- name: boshrelease
  type: git
  source:
    uri: git@github.com:cloudfoundry-community/stannis-boshrelease.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}

- name: github-release
  type: github-release
  source:
    access_token: {{github-release-access-token}}
    user: cloudfoundry-community
    repository: stannis-boshrelease

- name: boshrelease-trigger
  type: git
  source:
    uri: git@github.com:cloudfoundry-community/stannis-boshrelease.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}
    paths: [packages/**/*, packages/*, jobs/*, jobs/**/*, templates/*, src/**/*, src/*]

- name: boshrelease-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry-community/stannis-boshrelease.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}

- name: version
  type: semver
  source:
    driver: git
    initial_version: 12.0.0
    uri: git@github.com:cloudfoundry-community/stannis-boshrelease.git
    branch: version
    file: version
    private_key: {{github-private-key}}

- name: candidate-release
  type: s3
  source:
    bucket: stannis-boshrelease
    regexp: stannis-(.*).tgz
    access_key_id: {{cfcommunity-aws-access}}
    secret_access_key: {{cfcommunity-aws-secret}}
    region_name: {{cfcommunity-aws-region}}

- name: lite-deployment-testflight
  type: bosh-deployment
  source: &lite-testflight-defaults
    target: {{bosh-lite-testflight-target}}
    username: {{bosh-lite-username}}
    password: {{bosh-lite-password}}
    deployment: stannis-testflight
